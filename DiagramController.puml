@startuml
skinparam linetype ortho
top to bottom direction

title Architecture en Couches

package "Carpooling Controller"  as controller {
abstract class AbstractController  {
}
class BrandController {
    +insertBrand(Request $request, EntityManagerInterface $em) : Response
    +deleteBrand(Request $request, $id, EntityManagerInterface $em) : Response
    +listAllBrands(EntityManagerInterface $em) : Response
}
class CarController {
    +insertCar(Request $request, EntityManagerInterface $em) : Response
    +deleteCar(Request $request, int $id, EntityManagerInterface $em) : Response
    +listAllCars(EntityManagerInterface $em) : Response
}
class CityController {
    +insertCity(Request $request, EntityManagerInterface $em) : Response
    +deleteCity(Request $request, int $id, EntityManagerInterface $em) : Response
    +listAllCities(EntityManagerInterface $em) : Response
    +listAllZipCodes(EntityManagerInterface $em) : Response
}
class StudentController {
    -tokenAuth : TokenAuth
    +insertStudent(Request $request, EntityManagerInterface $em) : Response
    +updateStudent(Request $request, EntityManagerInterface $em) : Response
    +deleteStudent(int $id, EntityManagerInterface $em) : Response
    +getStudent(int $id, EntityManagerInterface $em, Request $request) : Response
    +listAllStudents(EntityManagerInterface $em) : Response
}
class TripController {
    -tokenAuth : TokenAuth
    +insertTrip(Request $request, EntityManagerInterface $em) : Response
    +searchTrip(Request $request, EntityManagerInterface $em, $idCityStart, $idCityArrival, $dateTravel) : Response
    +listAllTrips(Request $request, EntityManagerInterface $em) : Response
    +deleteTrip(Request $request, int $id, EntityManagerInterface $em) : Response
    +insertParticipation(Request $request, EntityManagerInterface $em) : Response
    +listAllParticipations(Request $request, EntityManagerInterface $em) : Response
    +deleteParticipation(Request $request, int $tripid, EntityManagerInterface $em) : Response
    +getDriverOnTrip(Request $request, EntityManagerInterface $em, $tripid) : Response
    +getStudentOnTrips(Request $request, EntityManagerInterface $em, $studentid) : Response

}
class UserController {
    -passwordHasher : UserPasswordHasherInterface
    +register(Request $request, EntityManagerInterface $em) : Response
    +login(Request $request, EntityManagerInterface $em, UserPasswordHasherInterface $passwordHasher) : Response
}
AbstractController ^-down- BrandController
AbstractController ^-down-- CarController
AbstractController ^-down--- CityController
AbstractController ^-down--- StudentController
AbstractController ^-down-- TripController
AbstractController ^-down- UserController

@enduml